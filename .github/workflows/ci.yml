name: ci

on: 
  push:
    
jobs:
    debug:
      runs-on: ubuntu-latest
      steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
   pr: 
     runs-on: ubuntu-latest
     if: github.event.ref != 'refs/heads/master' # Skip on master
     steps:
       - name: pull-request-action
         uses: vsoch/pull-request-action@master
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           BRANCH_PREFIX: ""
           PULL_REQUEST_BRANCH: "master"
           PULL_REQUEST_TITLE: "Auto PR for ${{ github.ref }}"
           PULL_REQUEST_BODY: "This is an autogenerated PR as a result from a commit pushed from this branch: ${{ github.ref }}"

  # ci:
  #   runs-on: ubuntu-latest
  #   needs: pr
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Setup .NET Core
  #     uses: actions/setup-dotnet@master
  #     with:
  #       dotnet-version: 3.1.102
    
  #   - name: compile
  #     run: dotnet build ./src/*.csproj --configuration Release
    
  #   - name: test
  #     run: dotnet test ./test/*.csproj

  #   - name: quality
  #     run: |
  #       sonar_host_url="https://sonarcloud.io"
  #       github_commits_url=$(jq .repository.commits_url "$GITHUB_EVENT_PATH")
  #       github_pullrequest_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
  #       github_event_action=$(jq -r ".action" "$GITHUB_EVENT_PATH")
  #       github_branch_ref="${{ github.ref }}"
  #       github_branch_name=${github_branch_ref##*/}  # retain the part after the last slash 
  #       github_repository_key="${{ github.repository }}" 
  #       sonar_organization_name=${github_repository_key%%/*} # retain the part before the last slash 
  #       sonar_project_name=${github_repository_key##*/}  # retain the part after the last slash 
  #       sonar_project_key="${sonar_organization_name}_${sonar_project_name}"
  #       echo "===BEFORE SCRIPT==="
  #       echo "sonar host url: $sonar_host_url"
  #       echo "sonar organization: $sonar_organization_name"
  #       echo "sonar project key: $sonar_project_key"
  #       echo "sonar project name: $sonar_project_name"
  #       echo "github repository key: $github_repository_key"
  #       echo "github branch ref: $github_branch_ref"
  #       echo "github branch name: $github_branch_name"
  #       echo "github pull request number: $github_pullrequest_number"
  #       echo "github event action: $github_event_action"
  #       echo "github event path: $GITHUB_EVENT_PATH"
  #       #cat "$GITHUB_EVENT_PATH"
  #       echo "commits url: $github_commits_url"
  #       dotnet tool install dotnet-sonarscanner --tool-path "$HOME/.dotnet/tools"
  #       export PATH="$PATH:$HOME/.dotnet/tools"
  #       ./scripts/quality.sh -u "$sonar_host_url" -t "${{ secrets.SONAR_TOKEN }}" -o "$sonar_organization_name" -k "$sonar_project_key" -n "$sonar_project_name" -g "$github_repository_key" -r "$github_branch_ref" -b "$github_branch_name" -p "$github_pullrequest_number" -e "$github_event_action"
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  #   - name: package
  #     run: dotnet pack ./src/*.csproj --configuration Release
    
  #   - name: Setup NuGet.exe for use with actions
  #     uses: NuGet/setup-nuget@master
      
  #   - name: add nuget source
  #     run: nuget sources Add -Name "github" -Source "https://nuget.pkg.github.com/aaronlcope/index.json" -Username "aaroncope@gmail.com" -Password ${{secrets.GITHUB_TOKEN}}
      
  #   - name: push
  #     run: nuget push -Source "github" ./src/**/*/*.nupkg -SkipDuplicate
